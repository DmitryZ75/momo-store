cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - build-image
  - test
  - notify
  - release
  - deploy-image

include:
  - remote: 'https://gitlab.com/gitlab-org/gitlab/-/raw/2851f4d5/lib/gitlab/ci/templates/Jobs/SAST.latest.gitlab-ci.yml'
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

# компилируем фронтенд и кладем в арефакты

build-frontend:
   stage: build
   script:
      - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt 
      - cd application/frontend 
      - npm install 
      - NODE_ENV=production VUE_APP_API_URL=https://momo-store.dmitryz.ru
      - npm run build             
      - cd ../.. 
      - ls -la
      - mkdir momo-${VERSION}
      - mv application/frontend/dist momo-${VERSION}/momo-frontend-${VERSION} 
      - ls -la
      - pwd
      - cd momo-${VERSION}
      - ls -la
      - du -sh momo-frontend-${VERSION}
   artifacts:
      paths:
         - momo-${VERSION}/momo-frontend-${VERSION} 
      reports:
         dotenv: CI_JOB_ID.txt 
   rules:
      - changes:
           - application/frontend/**/*

# прогоняем тесты

sonarqube-frontend-sast:
  stage: test
  only:
    changes:
      - application/frontend/**/*
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd application/frontend
    - sonar-scanner -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT} -Dsonar.sources=. -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_LOGIN_FRONT} -Dsonar.projectName=${SONAR_PROJECT_NAME_FRONT}
  needs:
    - build-frontend


# создаем образ для фронтенда

build-frontend-image:
  stage: build-image
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
  script:
    - cd application/frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
  only:
    changes:
    - application/frontend/**/*
  needs:
    - build-frontend


# публикуем образ в container registry

upload-frontend-image:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: deploy-image
  needs:
    - build-frontend-image
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:latest
  only:
    changes:
    - application/frontend/**/*

telegram-notification-frontend:
  stage: notify
  only:
    changes:
    - application/frontend/**/*
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
  
      - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"-1001626584285\", \"text\":\"Dmitry Zhagrin built the frontend project. You can download the artifact $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-code-job\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  needs:
    - build-frontend
    
# копируем приложение в Nexus

upload-release:
   stage: release
   script:
      - ls -la  # List files and directories in the current location
      - pwd     # Print the current working directory
      - cd momo-${VERSION}
      - pwd     # Print the current working directory after attempting to change
      - tar -czvf momo-frontend-${VERSION}.tar.gz momo-frontend-${VERSION}
      - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file momo-frontend-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONT}/${VERSION}/momo-frontend-${VERSION}.tar.gz
   rules:
      - changes:
           - application/frontend/**/*
  
#  environment: 
#    name: review/$CI_COMMIT_REF_NAME
#    url: http://${DEV_HOST}:80
#    auto_stop_in: 1h
#  rules: 
#    - when: manual
